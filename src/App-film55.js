import React, { Component } from "react";
import User from "./componet/54.state/users_film54";
export default class App_film54 extends Component {
  constructor(props) {
    super(props);

    this.state = {
      users: [
        { id: 1, name: "mohammad" },
        { id: 2, name: "reza" },
        { id: 3, name: "amir" },
        { id: 4, name: "ali" },
      ],
    };
    setTimeout(() => {
      //  this.state = {
      //    users: [
      //      {id: 1, name: "habib"},
      //      {id: 2, name: "saeed"},
      //      {id: 3, name: "mahdi"},
      //      {id: 4, name: "abol"},
      //     ]
      //  }

      this.setState({
        users: [
          { id: 1, name: "habib" },
          { id: 2, name: "saeed" },
          { id: 3, name: "mahdi" },
          { id: 4, name: "abol" },
        ],
      });
    }, 5000);
  }

  render() {
    return (
      <ul>
        <User {...this.state.users[0]} />
        <User {...this.state.users[1]} />
        <User {...this.state.users[2]} />
        <User {...this.state.users[3]} />
      </ul>
    );
  }
}

// توضیحات
//  ویرچال دام یک نمونه و شیع فرضی از ریل دام یا همون دام واقعی است و از لحاظ شکل و ظاهر دقیقا شبیه همون ریل دام است و ریاکت میاد در ابتدای کار . عملکرد پروژه یک ویرچال دام از روی ریل دام میسازه و سپس توی روند و اجرای اون پروژه اون وبسایت به محض اینکه یکی از دیتا های سایت یکی از قسمت های سایت عوض بشه چنح بشه ریاکت میاد یک ویرچال دام جدید میسازه و سپس با اون قبلیه مقایسه میکنه که گفتم به این کار میگن دف
// و از مقایسه دو تا ویرچال دام قبلی و جدید متوجه میشویم یک همچین المنتی باید به ریل دام اضاقه بشه پس میاد روی ریل دام این تغییر رو. اعمال میکنه اما همنطور که بهتون گفتم ریاکت زمانی میاد ویرچال دارم رو تازه سازی میکنه دوباره ویرچال دام میسازه که یکی از دیتا ها پروژمون عوض شده باشه این دیتا منظورمون چیه دقیقا استیت دقیقا استیت
// پس زمانی که استیت عوض بشه ریاکت میاد یک بار ویرچال دام میسازه و ویرچال دامشو با ثبلیه مقایسه میکنه و سپس هر تغییر که توی ویرچال دامه تازه یا همون جدیده اعمال شده باشه میاد روی جی اس سیکس ما هم اونو اعمال میکنه
// بخاطر همین اسم این پروپرتی یا همون مقداره یا همون مشخصه استیته و اگر استیت نباشد و چنج بشه و اپدیت بشه مقدار برای ما ویرچال دام رو تازه سازی  نمیکنه
// دلیل استفاده ست تایم اوت داخل کانسراکتور اینکه به محض استفاده از اف فراخانی بشه و اجرا بشه
// به محض استفاده از هر کلاس اولین چیزی که ازش اجرا میشه همین کانسراکتروشه
// گفتیم که اگر استیت عوض بشه دوباره سازی میشه
